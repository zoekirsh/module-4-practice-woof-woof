{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Flatiron/code/Phase4/ChallengeLabs/module-4-practice-woof-woof/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport DogSpan from './DogSpan'; ///import BigDogContainer from './BigDogContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allDogs: [],\n      doggos: [],\n      selectedDog: {},\n      filtered: false\n    };\n\n    this.clickDog = dog => {\n      this.setState({\n        selectedDog: dog\n      });\n    };\n\n    this.toggleDog = e => {\n      e.persist();\n      let goodDog = !this.state.selectedDog.isGoodDog;\n      let URL = \"http://localhost:3000/pups/\".concat(this.state.selectedDog.id);\n      fetch(URL, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isGoodDog: goodDog\n        })\n      }).then(res => res.json()).then(newDog => this.setState({\n        selectedDog: newDog\n      }));\n    };\n\n    this.filterDogs = () => {\n      let filtered = this.state.allDogs.filter(dog => dog.isGoodDog === true);\n      let unfiltered = this.state.doggos;\n      let toggle = !this.state.filtered;\n\n      if (this.state.filtered === true) {\n        this.setState({\n          allDogs: filtered,\n          filtered: toggle\n        });\n      } else {\n        this.setState({\n          allDogs: unfiltered,\n          filtered: toggle\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups').then(res => res.json()).then(dogs => this.setState({\n      allDogs: dogs,\n      doggos: dogs\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"filter-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"good-dog-filter\",\n      onClick: this.filterDogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.filtered == false ? \"Filter good dogs: OFF\" : \"Filter good dogs: ON\")), React.createElement(\"div\", {\n      id: \"dog-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.allDogs.map(dog => React.createElement(DogSpan, {\n      dog: dog,\n      handleClick: this.clickDog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"dog-summary-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"DOGGO:\"), React.createElement(\"div\", {\n      id: \"dog-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.selectedDog.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.selectedDog.name), React.createElement(\"button\", {\n      onClick: this.toggleDog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.selectedDog.isGoodDog ? \"GOOD DOG!\" : \"BAD DOG!\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Flatiron/code/Phase4/ChallengeLabs/module-4-practice-woof-woof/src/App.js"],"names":["React","DogSpan","App","Component","state","allDogs","doggos","selectedDog","filtered","clickDog","dog","setState","toggleDog","e","persist","goodDog","isGoodDog","URL","id","fetch","method","headers","body","JSON","stringify","then","res","json","newDog","filterDogs","filter","unfiltered","toggle","componentDidMount","dogs","render","map","image","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DogSpan from './DogSpan';\n///import BigDogContainer from './BigDogContainer';\n\nclass App extends React.Component {\n\n  state = {\n    allDogs: [],\n    doggos: [],\n    selectedDog: {}, \n    filtered: false\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000/pups')\n    .then(res => res.json())\n    .then(dogs => this.setState({\n      allDogs: dogs,\n      doggos: dogs\n      }\n    ))\n  }\n\n  clickDog = (dog) => {\n    this.setState({\n      selectedDog: dog\n    })\n  }\n\n  toggleDog = (e) => {\n    e.persist()\n    let goodDog = !this.state.selectedDog.isGoodDog\n    let URL = `http://localhost:3000/pups/${this.state.selectedDog.id}`\n    fetch(URL, {\n      method: 'PATCH',\n      headers: {'Content-Type' : 'application/json'},\n      body: JSON.stringify({isGoodDog: goodDog})\n    })\n    .then(res => res.json())\n    .then(newDog => this.setState({\n      selectedDog: newDog\n    }))\n  }\n\n  filterDogs = () => {\n    let filtered = this.state.allDogs.filter(dog => dog.isGoodDog === true)\n    let unfiltered = this.state.doggos\n    let toggle = !this.state.filtered\n    if (this.state.filtered === true) {\n      this.setState({\n        allDogs: filtered,\n        filtered: toggle\n      })\n    } else {\n      this.setState({\n        allDogs: unfiltered,\n        filtered: toggle\n      })\n    }\n   \n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"filter-div\">\n          <button id=\"good-dog-filter\" onClick={this.filterDogs}>{this.state.filtered == false ? \"Filter good dogs: OFF\" : \"Filter good dogs: ON\"}</button>\n        </div>\n        <div id=\"dog-bar\">\n          {this.state.allDogs.map(dog => <DogSpan dog={dog} handleClick={this.clickDog}/>)}\n        </div>\n        <div id=\"dog-summary-container\">\n          <h1>DOGGO:</h1>\n          <div id=\"dog-info\">\n            <img src={this.state.selectedDog.image}></img>\n            <h2>{this.state.selectedDog.name}</h2>\n            <button onClick={this.toggleDog}>{this.state.selectedDog.isGoodDog ? \"GOOD DOG!\" : \"BAD DOG!\" }</button>  \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}